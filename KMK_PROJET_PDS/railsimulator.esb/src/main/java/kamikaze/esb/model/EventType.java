//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.14 at 03:12:36 AM CEST 
//


package kamikaze.esb.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EventType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EventType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="TEMPERATURE"/>
 *     &lt;enumeration value="CO2"/>
 *     &lt;enumeration value="PRESSION"/>
 *     &lt;enumeration value="LOCATION"/>
 *     &lt;enumeration value="BRAKE"/>
 *     &lt;enumeration value="HUMIDITY"/>
 *     &lt;enumeration value="VELOCITY"/>
 *     &lt;enumeration value="OBSTACLE"/>
 *     &lt;enumeration value="FREQUENTATION"/>
 *     &lt;enumeration value="STATE"/>
 *     &lt;enumeration value="ALARM_CALL"/>
 *     &lt;enumeration value="NO_SIGNAL"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EventType")
@XmlEnum
public enum EventType {

    TEMPERATURE("TEMPERATURE"),
    @XmlEnumValue("CO2")
    CO_2("CO2"),
    PRESSION("PRESSION"),
    LOCATION("LOCATION"),
    BRAKE("BRAKE"),
    HUMIDITY("HUMIDITY"),
    VELOCITY("VELOCITY"),
    OBSTACLE("OBSTACLE"),
    FREQUENTATION("FREQUENTATION"),
    STATE("STATE"),
    ALARM_CALL("ALARM_CALL"),
    NO_SIGNAL("NO_SIGNAL");
    private final String value;

    EventType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EventType fromValue(String v) {
        for (EventType c: EventType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
