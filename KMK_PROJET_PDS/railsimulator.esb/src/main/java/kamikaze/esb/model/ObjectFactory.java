//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.14 at 03:12:36 AM CEST 
//


package kamikaze.esb.model;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the kamikaze.esb.modelISIDIS package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: kamikaze.esb.modelISIDIS
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link StationSubSection }
     * 
     */
    public StationSubSection createStationSubSection() {
        return new StationSubSection();
    }

    /**
     * Create an instance of {@link Sensor }
     * 
     */
    public Sensor createSensor() {
        return new Sensor();
    }

    /**
     * Create an instance of {@link Car }
     * 
     */
    public Car createCar() {
        return new Car();
    }

    /**
     * Create an instance of {@link Section }
     * 
     */
    public Section createSection() {
        return new Section();
    }

    /**
     * Create an instance of {@link Device }
     * 
     */
    public Device createDevice() {
        return new Device();
    }

    /**
     * Create an instance of {@link Station }
     * 
     */
    public Station createStation() {
        return new Station();
    }

    /**
     * Create an instance of {@link SendInfrastructure }
     * 
     */
    public SendInfrastructure createSendInfrastructure() {
        return new SendInfrastructure();
    }

    /**
     * Create an instance of {@link Door }
     * 
     */
    public Door createDoor() {
        return new Door();
    }

    /**
     * Create an instance of {@link EventMessage }
     * 
     */
    public EventMessage createEventMessage() {
        return new EventMessage();
    }

    /**
     * Create an instance of {@link StandardSubSection }
     * 
     */
    public StandardSubSection createStandardSubSection() {
        return new StandardSubSection();
    }

    /**
     * Create an instance of {@link Line }
     * 
     */
    public Line createLine() {
        return new Line();
    }

    /**
     * Create an instance of {@link Location }
     * 
     */
    public Location createLocation() {
        return new Location();
    }

    /**
     * Create an instance of {@link IncidentMessage }
     * 
     */
    public IncidentMessage createIncidentMessage() {
        return new IncidentMessage();
    }

    /**
     * Create an instance of {@link ActionAckMessage }
     * 
     */
    public ActionAckMessage createActionAckMessage() {
        return new ActionAckMessage();
    }

    /**
     * Create an instance of {@link ActionMessage }
     * 
     */
    public ActionMessage createActionMessage() {
        return new ActionMessage();
    }

    /**
     * Create an instance of {@link Infrastructure }
     * 
     */
    public Infrastructure createInfrastructure() {
        return new Infrastructure();
    }

    /**
     * Create an instance of {@link Train }
     * 
     */
    public Train createTrain() {
        return new Train();
    }

    /**
     * Create an instance of {@link Rail }
     * 
     */
    public Rail createRail() {
        return new Rail();
    }

    /**
     * Create an instance of {@link Platform }
     * 
     */
    public Platform createPlatform() {
        return new Platform();
    }

}
